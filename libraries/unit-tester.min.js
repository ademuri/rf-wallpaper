/**
 * Minified by jsDelivr using Terser v5.37.0.
 * Original file: /gh/RandomGamingDev/BasicUnitTesterJs@master/unit-tester.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
class UnitTester{constructor(t,s,e,i=null){this.name=t,this.description=s,this.test_func=e,this.subtesters=i,this.succeeded=null,this.error=null,this.failed_sub_tests=[]}test(t=!0,s=0){this.succeeded=!0;const e=UnitTester.generate_indentation(s);t&&(console.log(`${e}Testing ${this.name}...`),console.log(`${e}${this.name}'s description:  ${this.description}`));try{this.test_func()}catch(s){return this.succeeded=!1,this.error=s,t&&(console.log(this.error),console.log(`${e}FAILURE: ${this.name} failed!`)),this}return t&&console.log(`${e}SUCCESS: ${this.name} succeeded`),null!==this.subtesters&&this.subtesters.forEach((e=>{const i=e.test(t,s+1);this.failed_sub_tests=this.failed_sub_tests.concat(i.failed_sub_tests),!1===i.succeeded&&this.failed_sub_tests.push(i)})),this}static assert(t,s=null){if(!t)throw new Error(null===s?void 0:s)}static assert_strict_equal(t,s,e=null){return UnitTester.assert(t===s,e)}static assert_deep_equal(t,s,e=null){return UnitTester.assert(UnitTester.deep_equal(t,s),e)}static deep_equal(t,s){return JSON.stringify(t)===JSON.stringify(s)}static generate_indentation(t,s="  "){let e="";for(let i=0;i<t;i++)e+=s;return e}}
//# sourceMappingURL=/sm/a08ecc3fd7d949e46aaf20ce58c9ebd65ae1a4e8f1760b28fec039d66b0e6062.map